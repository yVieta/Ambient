[package]
name = "ambient_guest_bridge"
edition = "2021"
description = "Crate for the Ambient runtime that allows code to target either native host code or the API exposed to guest code."
license = "MIT OR Apache-2.0"
repository = "https://github.com/AmbientRun/Ambient"
rust-version = { workspace = true }
version = { workspace = true }

[package.metadata.docs.rs]
features = ["guest"]
rustdoc-args = ["--cfg", "docsrs"]
targets = ["wasm32-wasi"]

[dependencies]
# Native only
ambient_ecs = { path = "../../crates/ecs", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_core = { path = "../../crates/core", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_layout = { path = "../../crates/layout", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_renderer = { path = "../../crates/renderer", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_text = { path = "../../crates/text", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_rect = { path = "../../crates/rect", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_input = { path = "../../crates/input", optional = true, version = "0.3.2-nightly-2023-12-24" }
ambient_sys = { path = "../../crates/sys", optional = true, version = "0.3.2-nightly-2023-12-24" }
anyhow = { workspace = true }

# Guest only
ambient_api_core = { path = "../../guest/rust/api_core", optional = true, version = "0.3.2-nightly-2023-12-24" }

# Shared
ambient_shared_types = { path = "../shared_types", version = "0.3.2-nightly-2023-12-24" }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
arboard = { workspace = true, optional = true }

[features]
native = [
    "dep:ambient_ecs",
    "dep:ambient_core",
    "dep:ambient_layout",
    "dep:ambient_renderer",
    "dep:ambient_text",
    "dep:ambient_rect",
    "dep:ambient_input",
    "dep:ambient_sys",
    "dep:arboard",
    "ambient_shared_types/native",
]
guest = ["dep:ambient_api_core"]

client = ["ambient_api_core?/client"]
server = ["ambient_api_core?/server"]
