[workspace]
members = [
    "api",
    "api_core",
    "api_core/api_macros",
    # Basics
    "examples/basics/input",
    "examples/basics/multiplayer",
    "examples/basics/primitives",
    "examples/basics/skinmesh",

    # Intermediate
    "examples/intermediate/messaging",
    "examples/intermediate/async",
    "examples/intermediate/screen_ray",
    "examples/intermediate/clientside",
    "examples/intermediate/dependencies",
    "examples/intermediate/dependencies/deps/code",

    # Controllers
    "examples/controllers/first_person_camera",
    "examples/controllers/third_person_camera",

    # Assets
    "examples/assets/basic_model",
    "examples/assets/material_overriding",
    "examples/assets/generate_pipeline",
    "examples/assets/unity",
    "examples/assets/assimp",

    # Physics
    "examples/physics/basics",
    "examples/physics/visualize_colliders",

    # Rendering
    "examples/rendering/decals",
    "examples/rendering/fog",
    "examples/rendering/image",
    "examples/rendering/line",
    "examples/rendering/procedural_generation",
    "examples/rendering/raw_text",
    "examples/rendering/samplers",
    "examples/rendering/sun",
    "examples/rendering/transparency",
    "examples/rendering/instancing",

    # UI
    "examples/ui/audio_ctrl",
    "examples/ui/auto_editor",
    "examples/ui/button",
    "examples/ui/counter",
    "examples/ui/clock",
    "examples/ui/dock_layout",
    "examples/ui/editors",
    "examples/ui/flow_layout",
    "examples/ui/image",
    "examples/ui/rect",
    "examples/ui/screens",
    "examples/ui/scroll",
    "examples/ui/slider",
    "examples/ui/text",
    "examples/ui/todo",

    # Benchmarks
    "examples/benchmarks/animations",

    # Test cases
    "testcases/588-prefab-despawn-panic",

    # Packages (std)
    "packages/std/character_animation",
    "packages/std/character_movement",
    "packages/std/third_person_controller",
    "packages/std/orbit_camera",
    "packages/std/hide_cursor",
    "packages/std/explosion",
    "packages/std/nameplates",

    # Packages (tools)
    "packages/tools/console",
    "packages/tools/editor",
    "packages/tools/input_lag_probe",
    "packages/tools/package_manager",
    "packages/tools/world_latency",
    "packages/tools/performance_bar",

    # Packages (games)
    "packages/games/tangent",
    "packages/games/tangent/core/*",
    "packages/games/tangent/mods/*",

    "packages/games/minigolf",
    "packages/games/music_sequencer",
    "packages/games/pong",
    "packages/games/tictactoe",
    "packages/games/arkanoid",

    # Crates
    "crates/brand_theme",
]
resolver = "2"

[workspace.package]
rust-version = "1.70.0"
version = "0.3.2-nightly-2023-11-23"

[workspace.dependencies]
ambient_api = { path = "api", version = "0.3.2-nightly-2023-11-23" }
ambient_api_core = { path = "api_core", version = "0.3.2-nightly-2023-11-23" }
ambient_api_macros = { path = "api_core/api_macros", version = "0.3.2-nightly-2023-11-23" }
ambient_brand_theme = { path = "crates/brand_theme", version = "0.3.2-nightly-2023-11-23" }

ambient_package = { path = "../../shared_crates/package", version = "0.3.2-nightly-2023-11-23" }
ambient_package_macro_common = { path = "../../shared_crates/package_macro_common", version = "0.3.2-nightly-2023-11-23" }
ambient_package_rt = { path = "../../shared_crates/package_rt", version = "0.3.2-nightly-2023-11-23" }
ambient_shared_types = { path = "../../shared_crates/shared_types", version = "0.3.2-nightly-2023-11-23" }
ambient_ui = { path = "../../shared_crates/ui", version = "0.3.2-nightly-2023-11-23", features = [
    "guest",
] }
ambient_element = { path = "../../shared_crates/element", version = "0.3.2-nightly-2023-11-23", default-features = false, features = [
    "guest",
] }
ambient_editor_derive = { path = "../../shared_crates/editor_derive", version = "0.3.2-nightly-2023-11-23" }

ambient_pipeline_types = { path = "../../crates/pipeline_types", version = "0.3.2-nightly-2023-11-23" }

ambient_friendly_id = { path = "../../libs/friendly_id", version = "0.3.2-nightly-2023-11-23" }
ambient_cb = { path = "../../libs/cb", version = "0.3.2-nightly-2023-11-23" }
ambient_color = { path = "../../libs/color", version = "0.3.2-nightly-2023-11-23" }

anyhow = "1.0"
thiserror = "1.0"

byteorder = "1.4"
data-encoding = "2.3.3"
futures = "0.3"
glam = { version = "0.24.0", features = ["rand"] }
once_cell = "1.15.0"
paste = "1.0"
rand = "0.8.5"
wit-bindgen = { version = "0.9.0", features = ["realloc"] }
ulid = { version = "1.0.0", features = ["serde"] }
indexmap = { version = "2.0", features = ["serde"] }
serde = { version = "1.0", features = ["derive"] }
ordered-float = "3.9.1"
