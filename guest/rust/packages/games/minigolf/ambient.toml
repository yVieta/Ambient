[package]
id = "uigiqyr7qugdncpzkyzinvwxh26daahx"
name = "Minigolf"
description = "Can you hit a hole-in-one?"
version = "0.3.2-nightly-2023-11-25"
repository = "https://github.com/AmbientRun/Ambient/tree/main/guest/rust/packages/games/minigolf"
type = "Game"
content = { type = "Playable" }
ambient_version = "0.3.2-nightly-2023-11-25"

[dependencies]
hide_cursor = { path = "../../std/hide_cursor", deployment = "2weRubPIURz10C4RYS2Vdv" }

[components]
next_player_hue = { type = "F32", name = "Next Player Hue", description = "Controls the hue (in degrees) to use for the next player's color.", attributes = [
    "Debuggable",
    "Resource",
] }

is_ball = { type = "Empty", name = "Ball", description = "Used to tag a ball" }
origin = { type = "Vec3", name = "Origin", description = "An object's origin in world space" }

player_ball = { type = "EntityId", name = "Player Ball", description = "Used to tag a player's ball" }
player_restore_point = { type = "Vec3", name = "Player Restore Point", description = "A player's restore point" }
player_stroke_count = { type = "U32", name = "Player Stroke Count", description = "A player's stroke count" }
player_color = { type = "Vec4", name = "Player Color", description = "A player's color" }
player_shoot_requested = { type = "Bool", name = "Player Shoot Requested", description = "Whether or not a player has requested to shoot the ball" }

player_indicator = { type = "EntityId", name = "Player Indicator", description = "EntityId of a player's indicator" }
player_indicator_arrow = { type = "EntityId", name = "Player Indicator Arrow", description = "EntityId of a player's indicator arrow" }

player_text = { type = "EntityId", name = "Player Text", description = "EntityId of a player's text" }
player_text_container = { type = "EntityId", name = "Player Text Container", description = "EntityId of a player's text container" }

player_camera_pivot = { type = "Vec3", name = "Player Camera Pivot", description = "The pivot offset a player's camera pivots around" }
player_camera_position = { type = "Vec3", name = "Player Camera Position", description = "The position at which a player's camera pivots around" }
player_camera_radius = { type = "F32", name = "Player Camera Radius", description = "The radius at which a player's camera pivots around" }
player_camera_rotation = { type = "Vec2", name = "Player Camera Rotation", description = "The rotation (radians) of a player's camera" }
player_camera_state = { type = "EntityId", name = "Player Camera State", description = "EntityId of a player's camera state" }

[concepts.PlayerState]
name = "Player State"
description = "A player's state"

[concepts.PlayerState.components.required]
player_restore_point = { suggested = [-5.0, 0.0, 20.0] }
player_stroke_count = { suggested = 0 }
player_color = { suggested = [1.0, 1.0, 1.0, 1.0] }

[concepts.PlayerCameraState]
name = "Player Camera State"
description = "A player's camera state"

[concepts.PlayerCameraState.components.required]
player_camera_pivot = { suggested = [0.0, 0.0, 8.0] }
player_camera_position = { suggested = [0.0, 0.0, 0.0] }
player_camera_radius = { suggested = 15.0 }
player_camera_rotation = { suggested = ["PI", 0.610865] }

[messages.Input]
description = "Player input"
[messages.Input.fields]
camera_rotation = "Vec2"
camera_zoom = "F32"
shoot = "Bool"

[messages.Hit]
description = "Hit."
fields = { ball = "EntityId" }

[messages.Bonk]
description = "Collision between two objects."
fields = { ball = "EntityId" }
