[workspace]
members = ["client", "dioxus_example"]
default-members = ["client"]
resolver = "2"

[workspace.package]
version = "0.3.2-nightly-2024-01-04"
rust-version = "1.70.0"

[workspace.dependencies]

ambient_audio = { path = "../crates/audio" }
ambient_sys = { path = "../crates/sys", features = [
    "console_error_panic_hook",
] }
ambient_core = { path = "../crates/core" }
ambient_native_std = { path = "../crates/native_std" }
ambient_ecs = { path = "../crates/ecs" }
ambient_app = { path = "../crates/app" }
ambient_ui_native = { path = "../crates/ui_native" }
ambient_cameras = { path = "../crates/cameras/" }
ambient_renderer = { path = "../crates/renderer/" }
ambient_element = { path = "../shared_crates/element/" }
ambient_network = { path = "../crates/network/", features = ["frame-dropping"] }
ambient_rpc = { path = "../crates/rpc/" }
ambient_world_audio = { path = "../crates/world_audio" }
ambient_wasm = { path = "../crates/wasm" }
ambient_layout = { path = "../crates/layout" }
ambient_ecs_editor = { path = "../crates/ecs_editor" }
ambient_debugger = { path = "../crates/debugger" }
ambient_primitives = { path = "../crates/primitives" }
ambient_client_shared = { path = "../crates/client_shared/" }
ambient_water = { path = "../crates/water/" }
ambient_decals = { path = "../crates/decals/" }
ambient_prefab = { path = "../crates/prefab/" }
ambient_package_semantic_native = { path = "../crates/package_semantic_native/" }
ambient_sky = { path = "../crates/sky/" }
ambient_git_rev_init = { path = "../crates/git_rev_init/" }

url = "2.3"
anyhow = "1.0"
glam = { version = "0.24", features = ["rand", "bytemuck"] }
futures = "0.3"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["time"] }
flume = "0.11"
serde = { version = "1.0", features = ["derive"] }

# Web specific
wasm-bindgen = { version = "0.2" }
wasm-bindgen-futures = { version = "0.4" }
serde-wasm-bindgen = { version = "0.6" }
tracing-web = "0.1"
time = { version = "0.3", features = ["wasm-bindgen"] }
chrono = { version = "0.4", default-features = false, features = [
    "serde",
    "clock",
    "wasmbind",
] }
getrandom = { version = "0.2.8", features = ["js"] }
web-sys = { version = "0.3", features = [
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "HtmlDocument",
    "Performance",
    "Window",
    "ResizeObserver",
] }

js-sys = { version = "0.3" }
