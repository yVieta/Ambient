[package]
name = "ambient_network"
version = { workspace = true }
rust-version = { workspace = true }
edition = "2021"
description = "Ambient networking functionality. Host-only."
license = "MIT OR Apache-2.0"
repository = "https://github.com/AmbientRun/Ambient"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ambient_ecs = { path = "../ecs", version = "0.3.2-nightly-2023-12-17" }
ambient_sys = { path = "../sys", version = "0.3.2-nightly-2023-12-17" }
ambient_rpc = { path = "../rpc", version = "0.3.2-nightly-2023-12-17" }
ambient_native_std = { path = "../native_std", version = "0.3.2-nightly-2023-12-17" }
ambient_core = { path = "../core", version = "0.3.2-nightly-2023-12-17" }
ambient_gizmos = { path = "../gizmos", version = "0.3.2-nightly-2023-12-17" }
ambient_gpu = { path = "../gpu", version = "0.3.2-nightly-2023-12-17" }
ambient_gpu_ecs = { path = "../gpu_ecs", version = "0.3.2-nightly-2023-12-17" }
ambient_ui_native = { path = "../ui_native", version = "0.3.2-nightly-2023-12-17" }
ambient_renderer = { path = "../renderer", version = "0.3.2-nightly-2023-12-17" }
ambient_element = { path = "../../shared_crates/element", version = "0.3.2-nightly-2023-12-17" }
ambient_app = { path = "../app", version = "0.3.2-nightly-2023-12-17" }
ambient_world_audio = { path = "../world_audio", version = "0.3.2-nightly-2023-12-17" }


rustls-native-certs = { workspace = true, optional = true }

as-any = { workspace = true }
url = { workspace = true }
itertools = { workspace = true }
serde = { workspace = true }
futures = { workspace = true }
rand = { workspace = true }
thiserror = { workspace = true }
bincode = { workspace = true }
glam = { workspace = true }
profiling = { workspace = true }
tracing = { workspace = true }
bytes = { workspace = true }
parking_lot = { workspace = true }
wgpu = { workspace = true }
flume = { workspace = true }
anyhow = { workspace = true }
colored = { workspace = true }
pin-project = { workspace = true }
uuid = { workspace = true }
scopeguard = { workspace = true }
tokio = { workspace = true, features = ["macros", "io-util"] }
tokio-util = { version = "0.7", features = ["codec"] }

webpki-roots = { workspace = true, optional = true }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
tokio = { workspace = true, features = ["io-util"] }
async-trait = { workspace = true }


quinn = { workspace = true }
rustls = { workspace = true }
h3 = { workspace = true }
h3-quinn = { workspace = true }
h3-webtransport = { workspace = true }
http = { workspace = true }
ambient_proxy = { version = "0.3.3", git = "https://github.com/AmbientRun/AmbientProxy" }

[target.'cfg(target_os = "unknown")'.dependencies]
web-sys = { workspace = true, features = [
    "WebSocket",
    "WebTransport",
    "WritableStream",
    "ReadableStream",
    "ReadableStreamDefaultReader",
    "ReadableStreamReadResult",
    "WebTransportSendStream",
    "WritableStreamDefaultWriter",
    "WebTransportDatagramDuplexStream",
    "WebTransportCloseInfo",
    "WebTransportBidirectionalStream",
    "WebTransportReceiveStream",
] }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }
js-sys = { workspace = true }


[features]

tls-webpki-roots = ["dep:webpki-roots"]
tls-native-roots = ["dep:rustls-native-certs"]
frame-dropping = []
